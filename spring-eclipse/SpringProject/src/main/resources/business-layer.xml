<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!--  IOC 설정에 Annotation을 적용하기 위한 설정 -->
	<context:component-scan base-package="com.my.biz" />
	
	<!--  AOP에 Annotation을 적용하기 위한 설정 -->
	<aop:aspectj-autoproxy/>
	
	<!-- DataSource 등록 -->
	<bean id="dataSource" 
			class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
		<property name="driverClassName"	value="org.h2.Driver"></property>
		<property name="url"				value="jdbc:h2:tcp://localhost/~/test"></property>
		<property name="username"			value="sa"></property>
		<property name="password"			value=""></property>
	
	</bean>
	
	<!-- JdbcTemplate 등록 -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	
	<!-- 횡단관심에 해당하는 Advice 클래스 등록 
	<bean id="log" 				class="com.my.biz.common.LogAdvice"></bean>
	<bean id="afterReturning" 	class="com.my.biz.common.AfterReturningAdvice"></bean>
	<bean id="afterThrowing" 	class="com.my.biz.common.AfterThrowingAdvice"></bean>
	<bean id="around"           class="com.my.biz.common.AroundAdvice" ></bean> -->
	
	
	<!-- AOP 설정
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.my.biz..*Impl.*(..))"/>
		<aop:pointcut id="getPointcut" expression="execution(* com.my.biz..*Impl.get*(..))" />
		
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
		</aop:aspect>
		
		<aop:aspect ref="afterReturning">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
	
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj"/>
		</aop:aspect>
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="AroundLog"/>
		</aop:aspect>
	
	</aop:config>
	-->
	
</beans>